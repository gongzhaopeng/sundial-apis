openapi: 3.0.0
info:
  version: 'genesis'
  title: 'ExamPaper Service API'
  description: 'Assessment-Cloud:ExamPaper-Service对应的API.'
  contact:
    email: gongguochuanqi@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: http://sundial.benbenedu.cn:9001/exampaper/genesis
tags:
  - name: EpmTag
    description: 访问试卷模子标签.
  - name: ExamPaperMold
    description: 访问试卷模子.
  - name: ExamPaper
    description: 访问试卷.
paths:
  /epmtags:
    post:
      tags: 
        - EpmTag
      summary: 创建试卷模子标签.
      description: |
        创建试卷模子标签.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner', "ExamPaperBuilder" in roles}
      operationId: createEpmTag
      requestBody:
        description: 请求创建的试卷模子标签信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpmTagCreatingReq'
      responses:
        '201':
          description: 成功创建试卷模子标签.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpmTagCreatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicateTitle:
                  value:
                    code: 'DuplicateTitle'
                    detail: '${detail}'
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmtags/query:
    post:
      tags: 
        - EpmTag
      summary: Query试卷模子标签.
      description: |
        Query试卷模子标签.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner'}
      operationId: queryEpmTags
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultCreateTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpmTagQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpmTagPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmtags/{epmtag-id}:
    get:
      tags: 
        - EpmTag
      summary: 获取指定的试卷模子标签详情.
      description: |
        获取指定的试卷模子标签详情.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner'}
      operationId: getEpmTagById
      parameters: 
        - name: epmtag-id
          in: path
          description: 指定epmtag的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpmTag'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷模子标签不存在.
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmolds:
    post:
      tags:
        - ExamPaperMold
      summary: 创建试卷模子.
      description: |
        创建试卷模子.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner', "ExamPaperBuilder" in roles}
      operationId: createEpMold
      requestBody:
        description: 请求创建的试卷模子设计信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpMoldDesign'
      responses:
        '201':
          description: 成功创建试卷模子.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpMoldCreatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicateTitle:
                  value:
                    code: 'DuplicateTitle'
                    detail: '${detail}'
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmolds/query:
    post:
      tags: 
        - ExamPaperMold
      summary: Query试卷模子.
      description: |
        Query试卷模子.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner'}
        #### **内部服务**
        - authenticated
        - Client{'service:inner' in scope} 
      operationId: queryEpMolds
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpMoldQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpMoldPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmolds/{epmold-id}:
    get:
      tags: 
        - ExamPaperMold
      summary: 获取指定的试卷模子详情.
      description: |
        获取指定的试卷模子详情.  
        若未指定版本,则从主库中查找.  
        若指定了版本,则从档案库中查找.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner'}
        #### **内部服务**
        - authenticated
        - Client{'service:inner' in scope} 
      operationId: getEpMoldById
      parameters: 
        - name: epmold-id
          in: path
          description: 指定试卷模子的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
        - name: version
          in: query
          description: 指定试卷模子的版本序号.
          required: false
          schema:
            $ref: '#/components/schemas/VersionSerial'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamPaperMold'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷模子不存在.
      security:
        - exampaperRepoAuth: 
          - client:inner
    put:
      tags:
        - ExamPaperMold
      summary: 更新指定试卷模子的设计.
      description: |
        更新指定试卷模子的设计.  
        
        若当前状态为Developing, 则直接更新主库中相应对象的对应信息.  
        若当前状态为Usable, 则对主库中相应的对象做如下操作  
          1. 更新状态为Developing
          2. 递增version.serial并更新version.creator
          3. 更新请求中的对应信息
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner', "ExamPaperBuilder" in roles}
      operationId: updateEpMoldById
      parameters: 
        - name: epmold-id
          in: path
          description: 指定试卷模子的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求更新的试卷模子设计信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpMoldUpdatingReq'
      responses:
        '204':
          description: 更新成功.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷模子不存在.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicateTitle:
                  value:
                    code: 'DuplicateTitle'
                    detail: '${detail}'
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                alteringNotAllowed:
                  value:
                    code: 'AlteringNotAllowed'
                    detail: '${detail}'
                  description: '更改仅在非Discarded状态下被允许.'
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmolds/{epmold-id}/state:
    put:
      tags: 
        - ExamPaperMold
      summary: 更新指定试卷模子的状态.
      description: |
        更新指定试卷模子的状态.  
        
        若从Developing更新到Usable, 则执行如下操作
          1. 将状态从Developing更新到Usable
          2. 在档案库中创建主库中当前试卷模子的副本
        
        对于其它允许的状态转移路径,则仅需修改主库中当前试卷模子的状态.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner', "ExamPaperBuilder" in roles}
      operationId: updateEpmStateById
      parameters: 
        - name: epmold-id
          in: path
          description: 指定试卷模子的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 试卷模子状态更新请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpmStateUpdatingReq'
      responses:
        '204':
          description: 试卷模子状态更新成功.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷模子不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                specifiedStateConversionNotAllowed:
                  value:
                    code: 'SpecifiedStateConversionNotAllowed'
                    detail: '${detail}'
                  description: '允许的状态转换路径: Developing->{Usable,Discarded}, Usable->{Discarded}'
      security:
        - exampaperRepoAuth: 
          - client:inner
  /epmolds/{epmold-id}/tags:
    put:
      tags: 
        - ExamPaperMold
      summary: 更新指定试卷模子的标签集.
      description: |
        更新指定试卷模子的标签集.
        
        若当前状态为Usable,则需同时更新主库和档案库中当前版本试卷模子的标签集.  
        若为其它状态,则仅需更新主库中的试卷模子.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner', "ExamPaperBuilder" in roles}
      operationId: updateEpmTagsById
      parameters: 
        - name: epmold-id
          in: path
          description: 指定试卷模子的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 试卷模子标签集更新请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpmTagsUpdatingReq'
      responses:
        '204':
          description: 试卷模子标签集更新成功.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷模子不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
      security:
        - exampaperRepoAuth: 
          - client:inner
  /exampapers:
    post:
      tags: 
        - ExamPaper
      summary: 创建试卷.
      description: |
        创建试卷.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner', "ExamPaperBuilder" in roles}
      operationId: createExamPaper
      requestBody:
        description: 创建试卷的请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamPaperCreatingReq'
      responses:
        '201':
          description: 成功创建试卷.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamPaperCreatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '501':
          description: Not Implemented.
      security:
        - exampaperRepoAuth: 
          - client:inner
  /exampapers/query:
    post:
      tags: 
        - ExamPaper
      summary: Query试卷.
      description: |
        Query试卷.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner'}
        #### **内部服务**
        - authenticated
        - Client{'service:inner' in scope} 
      operationId: queryExamPapers
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultCreateTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamPaperQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamPaperPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - exampaperRepoAuth: 
          - client:inner
  /exampapers/{exampaper-id}:
    get:
      tags:
        - ExamPaper
      summary: 获取指定的试卷详情.
      description: |
        获取指定的试卷详情.
        
        ### 权限控制
        #### **内部账户**
        - authenticated
        - Client{'client:inner' in scope}  
        - Account{type='Inner'}
        #### **内部服务**
        - authenticated
        - Client{'service:inner' in scope} 
      operationId: getExamPaperById
      parameters: 
        - name: exampaper-id
          in: path
          description: 指定试卷的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamPaper'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷不存在.
      security:
        - exampaperRepoAuth: 
          - client:inner
components:
  schemas:
    EpmTagCreatingReq:
      type: object
      description: 创建试卷模子标签的请求信息.
      properties:
        title:
          $ref: '#/components/schemas/EpmTagTitle'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
      required: 
        - title
    EpmTagCreatedResp:
      type: object
      description: 试卷模子标签创建成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
    EpmTagQuery:
      type: object
      description: 试卷模子标签查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        author:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        title:
          $ref: '#/components/schemas/TextSearchSpec'
        description:
          $ref: '#/components/schemas/TextSearchSpec'
    EpmTagPage:
      description: 试卷模子标签分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/EpmTag'
              minLength: 0
          required:
            - content
    EpMoldDesign:
      type: object
      description: 试卷模子的设计信息.
      properties:
        yieldingMode:
          $ref: '#/components/schemas/EpmYieldingMode'
        title:
          $ref: '#/components/schemas/EpTitle'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        epsGenerators:
          $ref: '#/components/schemas/EpmEpsGenerators'
        extFeatures:
          $ref: '#/components/schemas/EpExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpResources'
      required: 
        - yieldingMode
        - title
        - epsGenerators
    EpMoldCreatedResp:
      type: object
      description: 试卷模子创建成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
    EpMoldQuery:
      type: object
      description: 试卷模子查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        lUTime:
          $ref: '#/components/schemas/TimeQueryField'
        author:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        state:
          type: array
          items:
            $ref: '#/components/schemas/EpmState'
          description: 指定state所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
        yieldingMode:
          type: array
          items:
            $ref: '#/components/schemas/EpmYieldingMode'
          description: 指定yieldingMode所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
        title:
          $ref: '#/components/schemas/TextSearchSpec'
        description:
          $ref: '#/components/schemas/TextSearchSpec'
        introduction:
          $ref: '#/components/schemas/TextSearchSpec'
        tags:
          $ref: '#/components/schemas/IdAllMatchQueryField'
        resourceRefs:
          $ref: '#/components/schemas/VersioningRefQueryField'
        questionRefs:
          $ref: '#/components/schemas/VersioningRefQueryField'
    EpMoldPage:
      description: 试卷模子分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ExamPaperMold'
              minLength: 0
          required:
            - content
    EpMoldUpdatingReq:
      type: object
      description: 更新试卷模子的请求信息.
      properties:
        epmLUTime: 
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        newDesign:
          $ref: '#/components/schemas/EpMoldDesign'
      required:
        - epmLUTime
        - newDesign
    EpmStateUpdatingReq:
      type: object
      description: 更新试卷模子状态的请求信息.
      properties:
        epmLUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        newState:
          $ref: '#/components/schemas/EpmState'
      required: 
        - epmLUTime
        - newState
    EpmTagsUpdatingReq:
      type: object
      description: 更新试卷模子标签集的请求信息.
      properties:
        epmLUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        newTags:
          type: array
          description: 新的标签集. 该数组长度为0时表示清除所有标签.
          items:
            $ref: '#/components/schemas/ObjectID'
          minLength: 0
          maxLength: 50
      required: 
        - epmLUTime
        - newTags
    ExamPaperCreatingReq:
      type: object
      description: '创建试卷的请求信息. 携带admissionTicket参数时表示要创建对应的定制化试卷, 未携带admissionTicket参数则表示要创建通用试卷.'
      properties:
        admissionTicket:
          $ref: '#/components/schemas/EpAdmissionTicket'
        epmId:
          $ref: '#/components/schemas/ObjectID'
        epmVersion:
          $ref: '#/components/schemas/VersionSerial'
        mark:
          $ref: '#/components/schemas/EpMark'
      required: 
        - epmId
        - epmVersion
    ExamPaperCreatedResp:
      type: object
      description: 试卷创建成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
    ExamPaperQuery:
      type: object
      description: 试卷查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        atId:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        atUserId:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        atExamId:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        epmId:
          $ref: '#/components/schemas/IdAnyMatchQueryField'
        epmVersion:
          $ref: '#/components/schemas/VersionQueryField'
        mark:
          $ref: '#/components/schemas/TextSearchSpec'
        title:
          $ref: '#/components/schemas/TextSearchSpec'
        introduction:
          $ref: '#/components/schemas/TextSearchSpec'
    ExamPaperPage:
      description: 试卷分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ExamPaper'
              minLength: 0
          required:
            - content
    EpmTag:
      type: object
      description: 试卷模子标签.用于试卷模子管理.
      properties:
        id: 
          $ref: '#/components/schemas/ObjectID'
        createTime:
          type: integer
          format: int64
          description: 创建时间(timestamp).
        author:
          $ref: '#/components/schemas/AccountBrief'
        title:
          $ref: '#/components/schemas/EpmTagTitle'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
      required: 
        - id
        - createTime
        - author
        - title
    ExamPaperMold:
      type: object
      description: |
        试卷模子.  
        
        当yieldingMode为Definite时,下属的EpmEpsGenerator只能为确定型的.  
        当yieldingMode为Dynamic时,对下属的EpmEpsGenerator没有限制.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          type: integer
          format: int64
          description: 创建时间(timestamp).
        lUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        author:
          $ref: '#/components/schemas/AccountBrief'
        version:
          $ref: '#/components/schemas/SimpleVersion'
        state:
          $ref: '#/components/schemas/EpmState'
        yieldingMode:
          $ref: '#/components/schemas/EpmYieldingMode'
        title:
          $ref: '#/components/schemas/EpTitle'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        epsGenerators:
          $ref: '#/components/schemas/EpmEpsGenerators'
        extFeatures:
          $ref: '#/components/schemas/EpExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpResources'
        tags:
          type: array
          description: 标签集.用于管理.
          items:
            $ref: '#/components/schemas/EpmTagBrief'
        resourceRefs:
          type: array
          description: |
            资源引用表.  
            该属性仅用于后台维护引用关系, 不对外暴露.
          items:
            $ref: '#/components/schemas/VersioningRef'
        questionRefs:
          type: array
          description: |
            题目引用表.  
            该属性仅用于后台维护引用关系, 不对外暴露.
          items:
            $ref: '#/components/schemas/VersioningRef'
      required: 
        - id
        - createTime
        - lUTime
        - author
        - version
        - state
        - yieldingMode
        - title
        - epsGenerators
    EpmState:
      type: string
      description: 试卷模子的状态.
      enum: 
        - Developing
        - Usable
        - Discarded
      minLength: 1
      maxLength: 50
    EpmYieldingMode:
      type: string
      description: 试卷模子的试卷产出模式.
      enum:
        - Definite
        - Dynamic
      minLength: 1
      maxLength: 50
    EpTitle:
      type: string
      description: 试卷标题.
      minLength: 1
      maxLength: 200
    EpmEpsGenerators:
      type: array
      description: 试卷模子下最顶层的试卷块生成器集合.
      items:
        $ref: '#/components/schemas/CompositeEpsGenerator'
      minLength: 1
      maxLength: 50
    EpExtFeatures:
      type: object
      description: 试卷的扩展特征集,有业务含义.
      additionalProperties:
        $ref: '#/components/schemas/MediumValue'
      minLength: 1
      maxLength: 20
    EpResources:
      type: array
      description: 对应试卷层用到的资源集.
      items:
        $ref: '#/components/schemas/ResourceBrief'
      minLength: 1
      maxLength: 50
    CompositeEpsGenerator:
      type: object
      description: 可复合的试卷块生成器.
      properties:
        title:
          $ref: '#/components/schemas/EpsTitle'
        purpose:
          $ref: '#/components/schemas/EpsPurpose'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        generateStrategy:
          $ref: '#/components/schemas/EpsGenerateStrategy'
        subGenerators:
          type: array
          description: 下属的子生成器集.
          items:
            $ref: '#/components/schemas/CompositeEpsGenerator'
          minLength: 1
          maxLength: 50
        questions:
          type: array
          description: '对应的题集. 当purpose取值为Formal时, 当前试卷块中引入的题目须将answerMatchStrategy, stdAnswers以及对应的资源过滤掉.'
          items:
            $ref: '#/components/schemas/EpQuestion'
          minLength: 1
          maxLength: 2000
        timeLimit:
          $ref: '#/components/schemas/EpsTimeLimit'
        extFeatures:
          $ref: '#/components/schemas/EpsExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpsResources'
      required:
        - title
        - purpose
        - generateStrategy
    EpsTitle:
      type: string
      description: 试卷块标题.
      minLength: 1
      maxLength: 200
    EpsPurpose:
      type: string
      description: 试卷块的用途.
      enum:
        - Formal
        - Practice
        - Example
      minLength: 1
      maxLength: 50
    EpsGenerateStrategy:
      type: object
      description: 试卷块生成策略.
      properties:
        type:
          type: string
          description: 策略类型.
          enum:
            - CompositeFix
            - CompositeRand
            - QSetFix
            - QSetRand
          minLength: 1
          maxLength: 50
        metadata:
          type: object
          description: 策略元数据.用于定义辅助的策略参数.
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 500
          minLength: 1
          maxLength: 50
          example:
            outputEpsCount: 3
            outputQuestionCount: 10
      required: 
        - type
    EpsTimeLimit:
      type: integer
      format: int32
      description: 限时.单位(second).
      minimum: 1
    EpsExtFeatures:
      type: object
      description: 试卷块的扩展特征集,有业务含义.
      additionalProperties:
        $ref: '#/components/schemas/MediumValue'
      minLength: 1
      maxLength: 20
    EpsResources:
      type: array
      description: 对应试卷块层用到的资源集.
      items:
        $ref: '#/components/schemas/ResourceBrief'
      minLength: 1
      maxLength: 50
    EpQuestion:
      type: object
      description: 试卷题目.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
        title:
          $ref: '#/components/schemas/EpQuestionTitle'
        compositeEpQunit:
          $ref: '#/components/schemas/CompositeEpQuestionUnit'
        difficulty:
          $ref: '#/components/schemas/EpQuestionDifficulty'
      required: 
        - id
        - version
        - title
        - compositeEpQunit
    EpQuestionTitle:
      type: string
      description: 题目标题.
      minLength: 1
      maxLength: 200
    EpQuestionDifficulty:
      type: number
      format: float
      description: 题目的难度系数.
    CompositeEpQuestionUnit:
      type: object
      description: 可复合的试卷题目单位.
      properties:
        form:
          $ref: '#/components/schemas/EpQuForm'
        stem:
          $ref: '#/components/schemas/RichTextContentField'
        options:
          type: array
          description: 可选项集.仅当形式为选择题时出现.
          items:
            $ref: '#/components/schemas/EpQuOption'
          minLength: 1
          maxLength: 20
        quScore:
          type: number
          format: float
          description: 题目单位的分值.
        answerMatchStrategy:
          $ref: '#/components/schemas/EpAnswerMatchStrategy'
        stdAnswers:
          type: array
          description: 标准答案集.
          items:
            $ref: '#/components/schemas/EpStdAnswer'
          minLength: 1
          maxLength: 20
        subQunits:
          type: array
          description: 下属的题目单位集.
          items:
            $ref: '#/components/schemas/CompositeEpQuestionUnit'
          minLength: 1
          maxLength: 20
        extFeatures:
          type: object
          description: 扩展的特征集,有业务含义.
          additionalProperties:
            $ref: '#/components/schemas/MediumValue'
          minLength: 1
          maxLength: 20
        resources:
          type: array
          description: 当前层面用到的资源集.
          items:
            $ref: '#/components/schemas/ResourceBrief'
          minLength: 1
          maxLength: 50
      required: 
        - form
    EpQuForm:
      type: string
      description: 题目单位的形式.
      enum: 
        - Choice
        - MChoice
        - FillIn
        - QA
        - Composite
      minLength: 1
      maxLength: 50
    EpQuOption:
      type: object
      description: 可选项.
      properties:
        number:
          $ref: '#/components/schemas/NumberField'
        content:
          $ref: '#/components/schemas/RichTextContentField'
      required: 
        - number
        - content
    EpAnswerMatchStrategy:
      type: object
      description: 答案匹配策略.
      properties:
        type:
          type: string
          description: 策略类型.
          enum: 
            - OrderSensitiveEqual
            - OrderInsensitiveEqual
          minLength: 1
          maxLength: 50
        metadata:
          type: object
          description: 策略元数据.用于定义辅助的策略参数.
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 500
          minLength: 1
          maxLength: 50
      required: 
        - type
    EpStdAnswer:
      type: object
      description: 标准答案.
      properties:
        number:
          $ref: '#/components/schemas/NumberField'
        choices:
          type: array
          description: 选择集.用于支持类选择题形式.
          items:
            $ref: '#/components/schemas/NumberField'
          minLength: 1
          maxLength: 20
        criteria:
          type: array
          description: 非选项形式的答案内容集.用于支持非选择题形式.
          items:
            $ref: '#/components/schemas/MediumValue'
          minLength: 1
          maxLength: 20
        score:
          type: number
          format: float
          description: 特定标准答案对应的分值.
      required: 
        - number
    EpmTagBrief:
      type: object
      description: 试卷模子标签的简单形式.
      properties:
        id: 
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/EpmTagTitle'
      required: 
        - id
        - title
    EpmTagTitle:
      type: string
      description: 不可重复.
      minLength: 1
      maxLength: 25
    ExamPaper:
      type: object
      description: 试卷.
      properties:
        id: 
          $ref: '#/components/schemas/ObjectID'
        createTime:
          type: integer
          format: int64
          description: 创建时间(timestamp).
        admissionTicket:
          $ref: '#/components/schemas/EpAdmissionTicket'
        epmId:
          $ref: '#/components/schemas/ObjectID'
        epmVersion:
          $ref: '#/components/schemas/VersionSerial'
        mark:
          $ref: '#/components/schemas/EpMark'
        title:
          $ref: '#/components/schemas/EpTitle'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        sections:
          type: array
          description: 包含的试卷块集.
          items:
            $ref: '#/components/schemas/CompositeEpSection'
        extFeatures:
          $ref: '#/components/schemas/EpExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpResources'
      required: 
        - id
        - createTime
        - admissionTicket
        - epmId
        - epmVersion
        - title
        - sections
    EpAdmissionTicket:
      type: object
      description: 准考证在试卷内的表示.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        userId:
          $ref: '#/components/schemas/ObjectID'
        examId:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
        - userId
        - examId
    EpMark:
      type: string
      description: 标记.
      minLength: 1
      maxLength: 200
    CompositeEpSection:
      type: object
      description: 可复合的试卷块.
      properties:
        title:
          $ref: '#/components/schemas/EpsTitle'
        purpose:
          $ref: '#/components/schemas/EpsPurpose'
        introduction:
          $ref: '#/components/schemas/RichTextContentField'
        subSections:
          type: array
          description: 下属的子试卷块集.
          items:
            $ref: '#/components/schemas/CompositeEpSection'
        questions:
          type: array
          description: 对应的题集.
          items:
            $ref: '#/components/schemas/EpQuestion'
        timeLimit:
          $ref: '#/components/schemas/EpsTimeLimit'
        extFeatures:
          $ref: '#/components/schemas/EpsExtFeatures'
        defaultQuScore:
          $ref: '#/components/schemas/DefaultQuScore'
        resources:
          $ref: '#/components/schemas/EpsResources'
      required: 
        - title
        - purpose
    DefaultQuScore:
      type: number
      format: float
      description: 对应范围内缺省的题目单位分值.
    ResourceBrief:
      type: object
      description: 资源的简单形式.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
        mediaType:
          $ref: '#/components/schemas/MediaTypeField'
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ResourceContentBrief'
          minLength: 1
          maxLength: 5
      required: 
        - id
        - version
        - mediaType
        - contents
    ResourceContentBrief:
      type: object
      description: 资源内容摘要.
      properties:
        number:
          $ref: '#/components/schemas/NumberField'
        quality:
          $ref: '#/components/schemas/ResourceContentQuality'
        size:
          type: integer
          format: int32
          description: File size in bytes.
        duration:
          type: integer
          format: int32
          description: The duration.
        height:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        url:
          type: string
          description: 资源内容的实际访问地址.
          minLength: 1
          maxLength: 250
      required: 
        - number
        - size
        - url
    ResourceContentQuality:
      type: integer
      format: int32
      description: 质量等级.
      minimum: 1
      maximum: 10
    IdAnyMatchQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定的id集合. =relation=>any-match.
      minLength: 1
      maxLength: 50
    IdAllMatchQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定的id集合. =relation=>all-match.
      minLength: 1
      maxLength: 50
    VersionQueryField:
      type: array
      items:
        $ref: '#/components/schemas/VersionSerial'
      description: 指定version序号的集合. =relation=>in.
      minLength: 1
      maxLength: 10
    TimeQueryField:
      type: array
      items:
        type: integer
        format: int64
      description: 指定时间所属的区间序列. =relation=>in. 数组长度必须为偶数.
      minLength: 2
      maxLength: 20
    TextSearchSpec:
      type: object
      description: 文本搜索描述对象.
      properties:
        include:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
        exclude:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
    VersioningRefQueryField:
      type: array
      items:
        $ref: '#/components/schemas/VersioningRef'
      description: 指定的VersioningRef集合. =relation=>all.
      minLength: 1
      maxLength: 10
    VersioningRef:
      type: object
      description: 带版本的引用描述符.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        version:
          $ref: '#/components/schemas/VersionSerial'
      required:
        - id
    SimpleVersion:
      type: object
      description: 简单的版本描述符.
      properties:
        origin: 
          $ref: '#/components/schemas/ObjectID'
        serial:
          $ref: '#/components/schemas/VersionSerial'
        creator:
          $ref: '#/components/schemas/AccountBrief'
      required: 
        - origin
        - serial
        - creator
    VersionSerial:
      type: integer
      format: int32
      description: |
        版本对应的序号.
      minimum: 0
    AccountBrief:
      type: object
      description: 账户的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        name:
          type: string
        nickname:
          type: string
      required: 
        - id
    RichTextContentField:
      type: string
      description: 富文本编辑器输出的内容.
      minLength: 1
      maxLength: 2000
    NumberField:
      type: integer
      format: int32
      description: 编号.编号越小,优先级越高.
      minimum: 0
    MediumValue:
      type: object
      description: '多媒体形式的值.表现为两种形式: a.资源型,此时有效字段为resourceId和mediaType, b.直接文本型,此时有效字段为mediaType和value.'
      properties:
        resourceId:
          $ref: '#/components/schemas/ObjectID'
        mediaType:
          $ref: '#/components/schemas/MediaTypeField'
        value:
          type: string
          description: 值.
          minLength: 1
          maxLength: 1000
      required:
        - mediaType
      example: 
        mediaType: "text/plain"
        value: "tabu"
    MgmtDescriptionField:
      type: string
      description: 用于管理的描述信息.
      minLength: 1
      maxLength: 250
    MediaTypeField:
      type: string
      externalDocs: 
        description: wiki
        url: https://en.wikipedia.org/wiki/Media_type
      description: mime.types
      minLength: 1
      maxLength: 100
    ObjectID:
      type: string
      description: MongoDB:ObjectId
      minLength: 24
      maxLength: 24
    ErrorResponse:
      description: 错误响应.
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
        detail:
          type: string
          description: 错误详情.
      required:
        - code
    ErrorResponseCode:
      type: string
      description: 错误码.
      enum: 
        - Undefined
        - AccessLimited
        - LUTimeConflict
        - AlteringNotAllowed
        - SpecifiedStateConversionNotAllowed
        - DuplicateTitle
    BasicPage:
      type: object
      description: 分页基本信息.
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
      required: 
        - totalPages
        - totalElements
    PageNumberSpec:
      type: integer
      format: int32
      minimum: 0
      default: 0
    PageSizeSpec:
      type: integer
      format: int32
      minimum: 1
      maximum: 100
      default: 10
    PageSortWithDefaultCreateTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'createTime,desc'
    PageSortWithDefaultLUTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'lUTime,desc'
  securitySchemes:
    exampaperRepoAuth:
      type: oauth2
      flows:
        password:
          tokenUrl: "http://sundial.benbenedu.cn:9001/xauth/oauth/token"
          scopes:
            'client:inner': 内网客户端
  parameters:
    pageNumber:
      name: page
      in: query
      description: 指定页码.
      schema:
        $ref: '#/components/schemas/PageNumberSpec'
    pageSize:
      name: size
      in: query
      description: 指定页长.
      schema:
        $ref: '#/components/schemas/PageSizeSpec'
    pageSortWithDefaultCreateTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultCreateTimeDescSpec'
      style: form
      explode: true
    pageSortWithDefaultLUTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultLUTimeDescSpec'
      style: form
      explode: true
