openapi: 3.0.0
info:
  version: 'genesis'
  title: 'Delivery Service API'
  description: 'Assessment-Cloud:Delivery-Service对应的API.'
  contact:
    email: gongguochuanqi@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: http://sundial.benbenedu.cn/delivery/genesis
tags:
  - name: ExamStation
    description: 访问考试站.
  - name: ExamPaperDelivery
    description: 访问试卷递送信息.
paths:
  /examstations:
    post:
      tags: 
        - ExamStation
      summary: 创建考试站.
      description: 创建考试站.
      operationId: createExamStation
      requestBody:
        description: 请求创建的考试站信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStationDefinition'
      responses:
        '201':
          description: 成功创建考试站.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStationCreatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicateTitle:
                  value:
                    code: 'DuplicateName'
                    detail: '${detail}'
      security:
        - deliveryAuth: 
          - client:inner
  /examstations/query:
    post:
      tags: 
        - ExamStation
      summary: Query考试站.
      description: Query考试站.
      operationId: queryExamStations
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStationQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStationPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - deliveryAuth: 
          - client:inner
  /examstations/{examstation-id}:
    get:
      tags: 
        - ExamStation
      summary: 获取指定的考试站详情.
      description: 获取指定的考试站详情.
      operationId: getExamStationById
      parameters: 
        - name: examstation-id
          in: path
          description: 指定考试站的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamStation'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试站不存在.
      security:
        - deliveryAuth: 
          - client:inner
    put:
      tags:
        - ExamStation
      summary: 更新指定考试站的信息.
      description: 更新指定考试站的信息.
      operationId: updateExamStationById
      parameters: 
        - name: examstation-id
          in: path
          description: 指定考试站的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 请求更新的考试站信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStationUpdatingReq'
      responses:
        '204':
          description: 更新成功.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试站不存在.
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicateTitle:
                  value:
                    code: 'DuplicateName'
                    detail: '${detail}'
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                alteringNotAllowed:
                  value:
                    code: 'AlteringNotAllowed'
                    detail: '${detail}'
                  description: '更改仅在Building状态下被允许.'
      security:
        - deliveryAuth: 
          - client:inner
  /examstations/{examstation-id}/state:
    put:
      tags: 
        - ExamStation
      summary: 更新指定考试站的状态.
      description: 更新指定考试站的状态.
      operationId: updateExamStationStateById
      parameters: 
        - name: examstation-id
          in: path
          description: 指定考试站的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 考试站状态更新请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamStationStateUpdatingReq'
      responses:
        '204':
          description: 考试站状态更新成功.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的考试站不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                specifiedStateConversionNotAllowed:
                  value:
                    code: 'SpecifiedStateConversionNotAllowed'
                    detail: '${detail}'
                  description: '允许的状态转换路径: Developing->{Operative, Suspended, Destroyed}, Operative->{Suspended, Destroyed}, Suspended->{Operative, Destroyed}'
      security:
        - deliveryAuth: 
          - client:inner
  /epdeliveries:
    post:
      tags:
        - ExamPaperDelivery
      summary: 提交试卷递送任务.
      description: 提交试卷递送任务.
      operationId: submitExamPaperDelivery
      requestBody:
        description: 提交的试卷递送任务信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpDeliveryDefinition'
      responses:
        '201':
          description: 提交成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpDeliveryTaskCreatedResp'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - deliveryAuth: 
          - client:inner
  /epdeliveries/query:
    post:
      tags: 
        - ExamPaperDelivery
      summary: Query试卷递送任务.
      description: Query试卷递送任务.
      operationId: queryEpDeliveryTasks
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageSortWithDefaultLUTimeDesc'
      requestBody:
        description: 查询描述.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpDeliveryTaskQuery'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpDeliveryTaskPage'
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
      security:
        - deliveryAuth: 
          - client:inner
  /epdeliveries/{epdeliverie-id}:
    get:
      tags: 
        - ExamPaperDelivery
      summary: 获取指定的试卷递送任务.
      description: 获取指定的试卷递送任务.
      operationId: getEpDeliveryTaskById
      parameters: 
        - name: epdeliverie-id
          in: path
          description: 指定试卷递送任务的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      responses:
        '200':
          description: 获取成功.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampaperDeliveryTask'
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷递送任务不存在.
      security:
        - deliveryAuth: 
          - client:inner
  /epdeliveries/{epdeliverie-id}/state:
    put:
      tags: 
        - ExamPaperDelivery
      summary: 更新指定试卷递送任务的状态.
      description: 更新指定试卷递送任务的状态.
      operationId: updateEpDeliveryTaskStateById
      parameters: 
        - name: epdeliverie-id
          in: path
          description: 指定试卷递送任务的ID.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'
      requestBody:
        description: 试卷递送任务状态更新请求信息.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryTaskStateUpdatingReq'
      responses:
        '204':
          description: 试卷递送任务状态更新成功.
        '400':
          description: Bad Request.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden.
        '404':
          description: 指定的试卷递送任务不存在.
        '428':
          description: Precondition Required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                lUTimeConflict:
                  value:
                    code: 'LUTimeConflict'
                    detail: '${detail}'
                specifiedStateConversionNotAllowed:
                  value:
                    code: 'SpecifiedStateConversionNotAllowed'
                    detail: '${detail}'
                  description: '允许的状态转换路径: Active->{Inactive, Deleted}, Inactive->{Active, Deleted}'
      security:
        - deliveryAuth: 
          - client:inner
components:
  schemas:
    ExamStationDefinition:
      type: object
      description: 创建考试站的请求信息.
      properties:
        name:
          $ref: '#/components/schemas/ExamStationName'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        type:
          $ref: '#/components/schemas/ExamStationType'
        host:
          $ref: '#/components/schemas/ExamStationHost'
        resourceEngine:
          $ref: '#/components/schemas/ResourceEngine'
      required: 
        - name
        - type
        - host
        - resourceEngine
    ExamStationCreatedResp:
      type: object
      description: 考试站创建成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
    ExamStationQuery:
      type: object
      description: 考试站查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        lUTime:
          $ref: '#/components/schemas/TimeQueryField'
        creator:
          $ref: '#/components/schemas/IdQueryField'
        state:
          type: array
          items:
            $ref: '#/components/schemas/ExamStationState'
          description: 指定state所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
        name:
          $ref: '#/components/schemas/TextSearchSpec'
        description:
          $ref: '#/components/schemas/TextSearchSpec'
        type:
          type: array
          items:
            $ref: '#/components/schemas/ExamStationType'
          description: 指定type所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
        host:
          $ref: '#/components/schemas/TextSearchSpec'
        resourceEngineProvider:
          type: array
          items:
            $ref: '#/components/schemas/ResourceEngineProvider'
          description: 指定resourceEngineProvider所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
    ExamStationPage:
      description: 考试站分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ExamStation'
              minLength: 0
          required:
            - content
    ExamStationUpdatingReq:
      type: object
      description: 更新考试站的请求信息.
      properties:
        examstationLUTime: 
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        newDefinition:
          $ref: '#/components/schemas/ExamStationDefinition'
      required: 
        - examstationLUTime
        - newDefinition
    ExamStationStateUpdatingReq:
      type: object
      description: 更新考试站状态的请求信息.
      properties:
        examstationLUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        newState:
          $ref: '#/components/schemas/ExamStationState'
      required: 
        - examstationLUTime
        - newState
    EpDeliveryDefinition:
      type: object
      description: 提交试卷递送任务的请求信息.
      properties:
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        exampaper:
          $ref: '#/components/schemas/ExampaperBrief'
        examStation:
          $ref: '#/components/schemas/ExamStationBrief'
        autoPerform:
          type: boolean
          description: 是否自动执行.
          default: false
      required:
        - exampaper
        - examStation
    EpDeliveryTaskCreatedResp:
      type: object
      description: 试卷递送任务提交成功时的响应.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
      required: 
        - id
    EpDeliveryTaskQuery:
      type: object
      description: 试卷递送任务查询描述对象.
      properties:
        id: 
          $ref: '#/components/schemas/IdQueryField'
        createTime:
          $ref: '#/components/schemas/TimeQueryField'
        lUTime:
          $ref: '#/components/schemas/TimeQueryField'
        creator:
          $ref: '#/components/schemas/IdQueryField'
        state:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryTaskState'
          description: 指定state所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
        description:
          $ref: '#/components/schemas/TextSearchSpec'
        exampaperId:
          $ref: '#/components/schemas/IdQueryField'
        exampaperTitle:
          $ref: '#/components/schemas/TextSearchSpec'
        exampaperMark:
          $ref: '#/components/schemas/TextSearchSpec'
        examStationId:
          $ref: '#/components/schemas/IdQueryField'
        examStationName:
          $ref: '#/components/schemas/TextSearchSpec'
        examStationType:
          type: array
          items:
            $ref: '#/components/schemas/ExamStationType'
          description: 指定examStationType所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
        examStationHost:
          $ref: '#/components/schemas/TextSearchSpec'
        performingState:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryTaskPerformingState'
          description: 指定performingState所属的集合. =relation=>in.
          minLength: 1
          maxLength: 10
    EpDeliveryTaskPage:
      description: 试卷递送任务分页.
      allOf:
        - $ref: '#/components/schemas/BasicPage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ExampaperDeliveryTask'
              minLength: 0
          required:
            - content
    DeliveryTaskStateUpdatingReq:
      type: object
      description: 更新递送任务状态的请求信息.
      properties:
        deliveryTaskLUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        newState:
          $ref: '#/components/schemas/DeliveryTaskState'
      required: 
        - deliveryTaskLUTime
        - newState
    ExamStation:
      type: object
      description: 考试站.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          type: integer
          format: int64
          description: 创建时间(timestamp).
        lUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        creator:
          $ref: '#/components/schemas/AccountBrief'
        state:
          $ref: '#/components/schemas/ExamStationState'
        name:
          $ref: '#/components/schemas/ExamStationName'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        type:
          $ref: '#/components/schemas/ExamStationType'
        host:
          $ref: '#/components/schemas/ExamStationHost'
        resourceEngine:
          $ref: '#/components/schemas/ResourceEngine'
      required: 
        - id
        - createTime
        - lUTime
        - creator
        - state
        - name
        - type
        - host
        - resourceEngine
    ExamStationState:
      type: string
      description: 考试站状态.
      enum: 
        - Building
        - Operative
        - Suspended
        - Destroyed
      minLength: 1
      maxLength: 50
    ExamStationName:
      type: string
      description: 考试站名字.
      minLength: 1
      maxLength: 200
    ExamStationType:
      type: string
      description: 考试站类型.
      enum: 
        - OpenEva
      minLength: 1
      maxLength: 50
    ExamStationHost:
      type: string
      description: 考试站Host.
      minLength: 1
      maxLength: 50
      example: 
        api.openeva.com:9000
    ResourceEngine:
      type: object
      description: 资源引擎.
      properties:
        provider:
          $ref: '#/components/schemas/ResourceEngineProvider'
        aliyunOss:
          $ref: '#/components/schemas/AliyunOssConfig'
      required: 
        - provider
    ResourceEngineProvider:
      type: string
      description: 资源引擎供应商.
      enum:
        - AliyunOss
      minLength: 1
      maxLength: 50
    AliyunOssConfig:
      type: object
      description: Aliyun OSS configuration.
      properties:
        endpoint:
          type: string
          minLength: 1
          maxLength: 250
        bucket:
          type: string
          minLength: 1
          maxLength: 50
        accessKeyId:
          type: string
          minLength: 1
          maxLength: 100
        accessKeySecret:
          type: string
          minLength: 1
          maxLength: 1000
        path:
          type: string
          minLength: 1
          maxLength: 100
      required: 
        - endpoint
        - bucket
        - accessKeyId
        - accessKeySecret
        - path
    ExampaperDeliveryTask:
      type: object
      description: 试卷递送任务. 
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        createTime:
          type: integer
          format: int64
          description: 创建时间(timestamp).
        lUTime:
          type: integer
          format: int64
          description: 最近一次更新时间(timestamp).
        creator:
          $ref: '#/components/schemas/AccountBrief'
        state:
          $ref: '#/components/schemas/DeliveryTaskState'
        description:
          $ref: '#/components/schemas/MgmtDescriptionField'
        exampaper:
          $ref: '#/components/schemas/ExampaperBrief'
        examStation:
          $ref: '#/components/schemas/ExamStationBrief'
        lBeginTime:
          type: integer
          format: int64
          description: 最近一次执行的开始时间(timestamp).
        lFinishTime:
          type: integer
          format: int64
          description: 最近一次执行的结束时间(timestamp).
        performingState:
          $ref: '#/components/schemas/DeliveryTaskPerformingState'
        performingLogs:
          type: array
          items:
            type: string
          description: 执行logs.
      required: 
        - id
        - createTime
        - lUTime
        - creator
        - state
        - exampaper
        - examStation
    DeliveryTaskState:
      type: string
      description: 递送任务的状态.
      enum: 
        - Active
        - Inactive
        - Deleted
      minLength: 1
      maxLength: 50
    ExampaperBrief:
      type: object
      description: 试卷的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        title:
          $ref: '#/components/schemas/EpTitle'
        mark:
          $ref: '#/components/schemas/EpMark'
      required: 
        - id
        - title
    EpTitle:
      type: string
      description: 试卷标题.
      minLength: 1
      maxLength: 200
    EpMark:
      type: string
      description: 标记.
      minLength: 1
      maxLength: 200
    ExamStationBrief:
      type: object
      description: 考试站的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        name:
          $ref: '#/components/schemas/ExamStationName'
        type:
          $ref: '#/components/schemas/ExamStationType'
        host:
          $ref: '#/components/schemas/ExamStationHost'
      required: 
        - id
        - name
        - type
        - host
    DeliveryTaskPerformingState:
      type: string
      description: 递送任务的执行状态.
      enum: 
        - New
        - Performing
        - Error
        - Completed
      minLength: 1
      maxLength: 50
    IdQueryField:
      type: array
      items:
        $ref: '#/components/schemas/ObjectID'
      description: 指定id所属的集合. =relation=>in.
      minLength: 1
      maxLength: 50
    TimeQueryField:
      type: array
      items:
        type: integer
        format: int64
      description: 指定时间所属的区间序列. =relation=>in. 数组长度必须为偶数.
      minLength: 2
      maxLength: 20
    TextSearchSpec:
      type: object
      description: 文本搜索描述对象.
      properties:
        include:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
        exclude:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 25
          description: =relation=>all.
          minLength: 1
          maxLength: 10
    AccountBrief:
      type: object
      description: 作者的简单信息.
      properties:
        id:
          $ref: '#/components/schemas/ObjectID'
        name:
          type: string
        nickname:
          type: string
      required: 
        - id
    MgmtDescriptionField:
      type: string
      description: 用于管理的描述信息.
      minLength: 1
      maxLength: 250
    ObjectID:
      type: string
      description: MongoDB:ObjectId
      minLength: 24
      maxLength: 24
    BasicPage:
      type: object
      description: 分页基本信息.
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
      required: 
        - totalPages
        - totalElements
    PageNumberSpec:
      type: integer
      format: int32
      minimum: 0
      maximum: 100
      default: 0
    PageSizeSpec:
      type: integer
      format: int32
      minimum: 1
      maximum: 100
      default: 10
    PageSortWithDefaultCreateTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'createTime,desc'
    PageSortWithDefaultLUTimeDescSpec:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 50
      minLength: 1
      maxLength: 5
      default: 
        - 'lUTime,desc'
    ErrorResponse:
      description: 错误响应.
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
        detail:
          type: string
          description: 错误详情.
      required:
        - code
    ErrorResponseCode:
      type: string
      description: 错误码.
      enum: 
        - Undefined
        - LUTimeConflict
        - AlteringNotAllowed
        - SpecifiedStateConversionNotAllowed
        - DuplicateName
  securitySchemes:
    deliveryAuth:
      type: oauth2
      flows:
        password:
          tokenUrl: "http://sundial.benbenedu.cn/account/oauth/token"
          scopes:
            'client:inner': 内网客户端
  parameters:
    pageNumber:
      name: page
      in: query
      description: 指定页码.
      schema:
        $ref: '#/components/schemas/PageNumberSpec'
    pageSize:
      name: size
      in: query
      description: 指定页长.
      schema:
        $ref: '#/components/schemas/PageSizeSpec'
    pageSortWithDefaultCreateTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultCreateTimeDescSpec'
      style: form
      explode: true
    pageSortWithDefaultLUTimeDesc:
      name: sort
      in: query
      description: '排序规则. Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
      schema:
        $ref: '#/components/schemas/PageSortWithDefaultLUTimeDescSpec'
      style: form
      explode: true